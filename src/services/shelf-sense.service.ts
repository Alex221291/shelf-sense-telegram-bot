import { Injectable, HttpException, HttpStatus } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import axios, { AxiosInstance } from 'axios';
import {
  MerchGroupsResponse,
  ShelfSummaryResponse,
  PriceSummaryResponse,
  ShelvesVoidsResponse,
  PriceErrorsResponse,
  TaskActionResponse,
  GenerateLabelsPdfResponse,
  TaskAction,
} from '../types/shelf-sense.types';

@Injectable()
export class ShelfSenseService {
  private readonly apiClient: AxiosInstance;
  private readonly baseUrl: string;

  constructor(private readonly configService: ConfigService) {
    this.baseUrl = this.configService.get<string>('SHELF_SENSE_API_URL') || 'http://localhost:8000';
    
    this.apiClient = axios.create({
      baseURL: this.baseUrl,
      timeout: 30000,
      headers: {
        'Content-Type': 'application/json',
      },
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    this.apiClient.interceptors.response.use(
      (response) => response,
      (error) => {
        if (error.response) {
          throw new HttpException(
            error.response.data || 'API Error',
            error.response.status
          );
        }
        throw new HttpException('Network Error', HttpStatus.INTERNAL_SERVER_ERROR);
      }
    );
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–µ—Ä—á-–≥—Ä—É–ø–ø
   */
  async getMerchGroups(): Promise<MerchGroupsResponse> {
    try {
      console.log('üåê [API] –ó–∞–ø—Ä–æ—Å GET /merchgroups');
      const response = await this.apiClient.get<MerchGroupsResponse>('/merchgroups');
      console.log('‚úÖ [API] –û—Ç–≤–µ—Ç GET /merchgroups:', JSON.stringify(response.data, null, 2));
      return response.data;
    } catch (error) {
      console.error('‚ùå [API] –û—à–∏–±–∫–∞ GET /merchgroups:', error);
      throw new HttpException(
        '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ—Ä—á-–≥—Ä—É–ø–ø',
        HttpStatus.INTERNAL_SERVER_ERROR
      );
    }
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ–¥–∫—É –ø–æ –≤—ã–∫–ª–∞–¥–∫–µ —Ç–æ–≤–∞—Ä–∞
   */
  async getShelfSummary(): Promise<ShelfSummaryResponse> {
    try {
      console.log('üåê [API] –ó–∞–ø—Ä–æ—Å GET /shelves/summary');
      const response = await this.apiClient.get<ShelfSummaryResponse>('/shelves/summary');
      console.log('‚úÖ [API] –û—Ç–≤–µ—Ç GET /shelves/summary:', JSON.stringify(response.data, null, 2));
      return response.data;
    } catch (error) {
      console.error('‚ùå [API] –û—à–∏–±–∫–∞ GET /shelves/summary:', error);
      throw new HttpException(
        '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–æ–¥–∫–∏ –ø–æ –≤—ã–∫–ª–∞–¥–∫–µ',
        HttpStatus.INTERNAL_SERVER_ERROR
      );
    }
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ—Ç –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–µ—Ä—á-–≥—Ä—É–ø–ø–µ
   */
  async getShelvesVoids(groupId: string): Promise<ShelvesVoidsResponse> {
    try {
      console.log(`üåê [API] –ó–∞–ø—Ä–æ—Å GET /shelves/merchgroup/${groupId}/voids/tasks`);
      const response = await this.apiClient.get<ShelvesVoidsResponse>(
        `/shelves/merchgroup/${groupId}/voids/tasks`
      );
      console.log(`‚úÖ [API] –û—Ç–≤–µ—Ç GET /shelves/merchgroup/${groupId}/voids/tasks:`, JSON.stringify(response.data, null, 2));
      return response.data;
    } catch (error) {
      console.error(`‚ùå [API] –û—à–∏–±–∫–∞ GET /shelves/merchgroup/${groupId}/voids/tasks:`, error);
      throw new HttpException(
        '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø—É—Å—Ç–æ—Ç',
        HttpStatus.INTERNAL_SERVER_ERROR
      );
    }
  }

  /**
   * –û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–º–µ–Ω—É –∑–∞–¥–∞–Ω–∏—è
   */
  async markTaskAction(taskAction: TaskAction): Promise<TaskActionResponse> {
    try {
      console.log('üåê [API] –ó–∞–ø—Ä–æ—Å POST /tasks/action:', JSON.stringify(taskAction, null, 2));
      const response = await this.apiClient.post<TaskActionResponse>(
        '/tasks/action',
        taskAction
      );
      console.log('‚úÖ [API] –û—Ç–≤–µ—Ç POST /tasks/action:', JSON.stringify(response.data, null, 2));
      return response.data;
    } catch (error) {
      console.error('‚ùå [API] –û—à–∏–±–∫–∞ POST /tasks/action:', error);
      throw new HttpException(
        '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è',
        HttpStatus.INTERNAL_SERVER_ERROR
      );
    }
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ–¥–∫—É –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º
   */
  async getPriceSummary(): Promise<PriceSummaryResponse> {
    try {
      console.log('üåê [API] –ó–∞–ø—Ä–æ—Å GET /prices/summary');
      const response = await this.apiClient.get<PriceSummaryResponse>('/prices/summary');
      console.log('‚úÖ [API] –û—Ç–≤–µ—Ç GET /prices/summary:', JSON.stringify(response.data, null, 2));
      return response.data;
    } catch (error) {
      console.error('‚ùå [API] –û—à–∏–±–∫–∞ GET /prices/summary:', error);
      throw new HttpException(
        '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–æ–¥–∫–∏ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º',
        HttpStatus.INTERNAL_SERVER_ERROR
      );
    }
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º –ø–æ —Ç–∏–ø—É –æ—à–∏–±–∫–∏
   */
  async getPriceErrorsByType(errorType: string): Promise<PriceErrorsResponse> {
    try {
      console.log(`üåê [API] –ó–∞–ø—Ä–æ—Å GET /prices/errortype/${errorType}/tasks`);
      const response = await this.apiClient.get<PriceErrorsResponse>(
        `/prices/errortype/${errorType}/tasks`
      );
      console.log(`‚úÖ [API] –û—Ç–≤–µ—Ç GET /prices/errortype/${errorType}/tasks:`, JSON.stringify(response.data, null, 2));
      return response.data;
    } catch (error) {
      console.error(`‚ùå [API] –û—à–∏–±–∫–∞ GET /prices/errortype/${errorType}/tasks:`, error);
      throw new HttpException(
        '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –æ—à–∏–±–æ–∫ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º',
        HttpStatus.INTERNAL_SERVER_ERROR
      );
    }
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ
   */
  async getPriceErrorsByGroup(merchGroupId: string): Promise<PriceErrorsResponse> {
    try {
      console.log(`üåê [API] –ó–∞–ø—Ä–æ—Å GET /prices/merchgroup/${merchGroupId}/tasks`);
      const response = await this.apiClient.get<PriceErrorsResponse>(
        `/prices/merchgroup/${merchGroupId}/tasks`
      );
      console.log(`‚úÖ [API] –û—Ç–≤–µ—Ç GET /prices/merchgroup/${merchGroupId}/tasks:`, JSON.stringify(response.data, null, 2));
      return response.data;
      } catch (error) {
      console.error(`‚ùå [API] –û—à–∏–±–∫–∞ GET /prices/merchgroup/${merchGroupId}/tasks:`, error);
      throw new HttpException(
        '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –æ—à–∏–±–æ–∫ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º –≤ –≥—Ä—É–ø–ø–µ',
        HttpStatus.INTERNAL_SERVER_ERROR
      );
    }
  }

  /**
   * –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å PDF —Å —Ü–µ–Ω–Ω–∏–∫–∞–º–∏ –¥–ª—è –ø–µ—á–∞—Ç–∏
   */
  async generateLabelsPdf(): Promise<{ file_url: string; filename: string }> {
    try {
      console.log('üåê [API] –ó–∞–ø—Ä–æ—Å GET /price_tags/pdf');
      const response = await this.apiClient.get('/price_tags/pdf');
      console.log('‚úÖ [API] –û—Ç–≤–µ—Ç GET /price_tags/pdf:', JSON.stringify(response.data, null, 2));
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
      if (response.data && typeof response.data === 'object') {
        // –ï—Å–ª–∏ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é
        if (response.data.file_url && response.data.filename) {
          return {
            file_url: response.data.file_url,
            filename: response.data.filename
          };
        }
        
        // –ï—Å–ª–∏ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫—É
        if (response.data.file_url) {
          return {
            file_url: response.data.file_url,
            filename: '–¶–µ–Ω–Ω–∏–∫–∏ –¥–ª—è –ø–µ—á–∞—Ç–∏.pdf'
          };
        }
        
        // –ï—Å–ª–∏ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if (response.data.filename) {
          return {
            file_url: '–§–∞–π–ª –≥–æ—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é',
            filename: response.data.filename
          };
        }
        
        // –ï—Å–ª–∏ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ
        console.log('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ API');
        if (response.data.pdf_url) {
          // –ï—Å–ª–∏ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç pdf_url
          return {
            file_url: response.data.pdf_url,
            filename: '–¶–µ–Ω–Ω–∏–∫–∏ –¥–ª—è –ø–µ—á–∞—Ç–∏.pdf'
          };
        }
        return {
          file_url: '–î–∞–Ω–Ω—ã–µ –æ —Ñ–∞–π–ª–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã',
          filename: '–¶–µ–Ω–Ω–∏–∫–∏ –¥–ª—è –ø–µ—á–∞—Ç–∏.pdf'
        };
      }
      
      // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ –æ–±—ä–µ–∫—Ç
      console.log('‚ö†Ô∏è –ü—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç API');
      return {
        file_url: '–§–∞–π–ª —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω, –Ω–æ —Å—Å—ã–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞',
        filename: '–¶–µ–Ω–Ω–∏–∫–∏ –¥–ª—è –ø–µ—á–∞—Ç–∏.pdf'
      };
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF:', error);
      throw new HttpException(
        '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF —Å —Ü–µ–Ω–Ω–∏–∫–∞–º–∏',
        HttpStatus.INTERNAL_SERVER_ERROR
      );
    }
  }
}
