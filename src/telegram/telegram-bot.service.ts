import { Injectable, OnModuleInit } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { Telegraf, Context } from 'telegraf';
import { ShelfSenseService } from '../services/shelf-sense.service';

@Injectable()
export class TelegramBotService implements OnModuleInit {
  private bot: Telegraf<Context>;

  constructor(
    private readonly shelfSenseService: ShelfSenseService,
    private readonly configService: ConfigService
  ) {
    const token = this.configService.get<string>('TELEGRAM_BOT_TOKEN');
    if (!token) {
      throw new Error('TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }
    
    this.bot = new Telegraf(token);
    this.setupCommands();
  }

  onModuleInit() {
    this.bot.launch();
    console.log('ü§ñ Telegram Bot –∑–∞–ø—É—â–µ–Ω');
  }

  private setupCommands() {
    // –ö–æ–º–∞–Ω–¥–∞ /start
    this.bot.start(async (ctx) => {
      const welcomeMessage = `
üéØ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ShelfSense Bot!

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å –≤—ã–∫–ª–∞–¥–∫–æ–π —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Ü–µ–Ω–Ω–∏–∫–∞–º–∏.

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/merchgroups - –°–ø–∏—Å–æ–∫ –º–µ—Ä—á-–≥—Ä—É–ø–ø
/shelf_summary - –°–≤–æ–¥–∫–∞ –ø–æ –≤—ã–∫–ª–∞–¥–∫–µ
/price_summary - –°–≤–æ–¥–∫–∞ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º
/voids - –ü—É—Å—Ç–æ—Ç—ã –≤ –≥—Ä—É–ø–ø–µ
/price_errors - –û—à–∏–±–∫–∏ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º
/generate_pdf - –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å PDF —Å —Ü–µ–Ω–Ω–∏–∫–∞–º–∏

–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã!
      `;
      
      await ctx.reply(welcomeMessage);
    });

    // –ö–æ–º–∞–Ω–¥–∞ /merchgroups
    this.bot.command('merchgroups', async (ctx) => {
      try {
        const groups = await this.shelfSenseService.getMerchGroups();
        
        if (groups.length === 0) {
          await ctx.reply('üì≠ –ú–µ—Ä—á-–≥—Ä—É–ø–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
          return;
        }

        let message = 'üè∑Ô∏è –°–ø–∏—Å–æ–∫ –º–µ—Ä—á-–≥—Ä—É–ø–ø:\n\n';
        groups.forEach((group, index) => {
          message += `${index + 1}. ${group.name} (ID: ${group.id})\n`;
        });

        await ctx.reply(message);
      } catch (error) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ—Ä—á-–≥—Ä—É–ø–ø');
      }
    });

    // –ö–æ–º–∞–Ω–¥–∞ /shelf_summary
    this.bot.command('shelf_summary', async (ctx) => {
      try {
        const summary = await this.shelfSenseService.getShelfSummary();
        
        const message = `
üìä –°–≤–æ–¥–∫–∞ –ø–æ –≤—ã–∫–ª–∞–¥–∫–µ —Ç–æ–≤–∞—Ä–∞:

ü™ë –ü–æ–ª–æ–∫ —Å –ø—É—Å—Ç–æ—Ç–∞–º–∏: ${summary.shelves_with_voids}
üìà –ü—Ä–æ—Ü–µ–Ω—Ç –ø—É—Å—Ç–æ—Ç: ${summary.voids_percent.toFixed(2)}%
üì¶ SKU –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è: ${summary.skus_to_fill}
üÜï –ù–æ–≤—ã—Ö –ø—É—Å—Ç–æ—Ç: ${summary.new_voids}

üèÜ –¢–æ–ø –≥—Ä—É–ø–ø—ã:
${summary.top_groups.map((group, index) => `${index + 1}. ${group}`).join('\n')}
        `;

        await ctx.reply(message);
      } catch (error) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–æ–¥–∫–∏ –ø–æ –≤—ã–∫–ª–∞–¥–∫–µ');
      }
    });

    // –ö–æ–º–∞–Ω–¥–∞ /price_summary
    this.bot.command('price_summary', async (ctx) => {
      try {
        const summary = await this.shelfSenseService.getPriceSummary();
        
        const message = `
üè∑Ô∏è –°–≤–æ–¥–∫–∞ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º:

ü™ë –ü–æ–ª–æ–∫ —Å –æ—à–∏–±–∫–∞–º–∏: ${summary.shelves_with_errors}
üìà –ü—Ä–æ—Ü–µ–Ω—Ç –æ—à–∏–±–æ–∫: ${summary.errors_percent.toFixed(2)}%
üí∞ –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ü–µ–Ω: ${summary.price_mismatch}
üìã –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —à–∞–±–ª–æ–Ω–æ–≤: ${summary.tag_template_mismatch}
‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ü–µ–Ω–Ω–∏–∫–∏: ${summary.tags_missing}
‚ûï –õ–∏—à–Ω–∏–µ —Ü–µ–Ω–Ω–∏–∫–∏: ${summary.tags_extra}

üèÜ –¢–æ–ø –≥—Ä—É–ø–ø—ã:
${summary.top_groups.map((group, index) => `${index + 1}. ${group}`).join('\n')}
        `;

        await ctx.reply(message);
      } catch (error) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–æ–¥–∫–∏ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º');
      }
    });

    // –ö–æ–º–∞–Ω–¥–∞ /voids
    this.bot.command('voids', async (ctx) => {
      const message = `
üîç –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—É—Å—Ç–æ—Ç –≤ –≥—Ä—É–ø–ø–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:
/voids_group [ID_–≥—Ä—É–ø–ø—ã]

–ù–∞–ø—Ä–∏–º–µ—Ä: /voids_group abc123

–°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø –∫–æ–º–∞–Ω–¥–æ–π /merchgroups
      `;
      
      await ctx.reply(message);
    });

    // –ö–æ–º–∞–Ω–¥–∞ /voids_group
    this.bot.command('voids_group', async (ctx) => {
      const message = ctx.message?.text;
      if (!message) return;

      const groupId = message.split(' ')[1];
      if (!groupId) {
        await ctx.reply('‚ùå –£–∫–∞–∂–∏—Ç–µ ID –≥—Ä—É–ø–ø—ã. –ü—Ä–∏–º–µ—Ä: /voids_group abc123');
        return;
      }

      try {
        const voids = await this.shelfSenseService.getShelvesVoids(groupId);
        
        if (voids.length === 0) {
          await ctx.reply('üì≠ –ü—É—Å—Ç–æ—Ç—ã –≤ –¥–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
          return;
        }

        let responseMessage = `ü™ë –ü—É—Å—Ç–æ—Ç—ã –≤ –≥—Ä—É–ø–ø–µ (ID: ${groupId}):\n\n`;
        voids.forEach((voidItem, index) => {
          responseMessage += `${index + 1}. ${voidItem.name}\n`;
          responseMessage += `   üìç –ü–æ–ª–∫–∞: ${voidItem.shelf_index}, –ü–æ–∑–∏—Ü–∏—è: ${voidItem.position}\n`;
          responseMessage += `   üè∑Ô∏è SKU: ${voidItem.sku}\n`;
          responseMessage += `   üì¶ –û—Å—Ç–∞—Ç–æ–∫: ${voidItem.stock}\n\n`;
        });

        await ctx.reply(responseMessage);
      } catch (error) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø—É—Å—Ç–æ—Ç');
      }
    });

    // –ö–æ–º–∞–Ω–¥–∞ /price_errors
    this.bot.command('price_errors', async (ctx) => {
      const message = `
üîç –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:

1. –ü–æ —Ç–∏–ø—É –æ—à–∏–±–∫–∏:
/price_errors_type [–¢–ò–ü_–û–®–ò–ë–ö–ò]

–¢–∏–ø—ã –æ—à–∏–±–æ–∫:
- PRICE_MISMATCH (–Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ü–µ–Ω—ã)
- TAG_TEMPLATE_MISMATCH (–Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —à–∞–±–ª–æ–Ω–∞)
- TAG_PRODUCT_MISMATCH (–Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–æ–≤–∞—Ä–∞)
- TAG_MISSING (–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π —Ü–µ–Ω–Ω–∏–∫)
- TAG_EXTRA (–ª–∏—à–Ω–∏–π —Ü–µ–Ω–Ω–∏–∫)

2. –ü–æ –≥—Ä—É–ø–ø–µ:
/price_errors_group [ID_–ì–†–£–ü–ü–´]

–ü—Ä–∏–º–µ—Ä—ã:
/price_errors_type PRICE_MISMATCH
/price_errors_group abc123
      `;
      
      await ctx.reply(message);
    });

    // –ö–æ–º–∞–Ω–¥–∞ /price_errors_type
    this.bot.command('price_errors_type', async (ctx) => {
      const message = ctx.message?.text;
      if (!message) return;

      const errorType = message.split(' ')[1];
      if (!errorType) {
        await ctx.reply('‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –æ—à–∏–±–∫–∏. –ü—Ä–∏–º–µ—Ä: /price_errors_type PRICE_MISMATCH');
        return;
      }

      try {
        const errors = await this.shelfSenseService.getPriceErrorsByType(errorType);
        
        if (errors.length === 0) {
          await ctx.reply(`üì≠ –û—à–∏–±–∫–∏ —Ç–∏–ø–∞ "${errorType}" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
          return;
        }

        let responseMessage = `üè∑Ô∏è –û—à–∏–±–∫–∏ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º (—Ç–∏–ø: ${errorType}):\n\n`;
        errors.forEach((error, index) => {
          responseMessage += `${index + 1}. ${error.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\n`;
          responseMessage += `   üìç –ü–æ–ª–∫–∞: ${error.shelf_index}, –ü–æ–∑–∏—Ü–∏—è: ${error.position}\n`;
          responseMessage += `   üè∑Ô∏è SKU: ${error.sku || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
          responseMessage += `   üìã –ì—Ä—É–ø–ø–∞: ${error.merch_group.name}\n`;
          if (error.details) {
            responseMessage += `   üìù –î–µ—Ç–∞–ª–∏: ${error.details}\n`;
          }
          responseMessage += '\n';
        });

        await ctx.reply(responseMessage);
      } catch (error) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –æ—à–∏–±–æ–∫ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º');
      }
    });

    // –ö–æ–º–∞–Ω–¥–∞ /price_errors_group
    this.bot.command('price_errors_group', async (ctx) => {
      const message = ctx.message?.text;
      if (!message) return;

      const groupId = message.split(' ')[1];
      if (!groupId) {
        await ctx.reply('‚ùå –£–∫–∞–∂–∏—Ç–µ ID –≥—Ä—É–ø–ø—ã. –ü—Ä–∏–º–µ—Ä: /price_errors_group abc123');
        return;
      }

      try {
        const errors = await this.shelfSenseService.getPriceErrorsByGroup(groupId);
        
        if (errors.length === 0) {
          await ctx.reply(`üì≠ –û—à–∏–±–∫–∏ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º –≤ –≥—Ä—É–ø–ø–µ (ID: ${groupId}) –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
          return;
        }

        let responseMessage = `üè∑Ô∏è –û—à–∏–±–∫–∏ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º –≤ –≥—Ä—É–ø–ø–µ (ID: ${groupId}):\n\n`;
        errors.forEach((error, index) => {
          responseMessage += `${index + 1}. ${error.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\n`;
          responseMessage += `   üìç –ü–æ–ª–∫–∞: ${error.shelf_index}, –ü–æ–∑–∏—Ü–∏—è: ${error.position}\n`;
          responseMessage += `   üè∑Ô∏è SKU: ${error.sku || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
          responseMessage += `   ‚ùå –¢–∏–ø –æ—à–∏–±–∫–∏: ${error.error_type}\n`;
          if (error.details) {
            responseMessage += `   üìù –î–µ—Ç–∞–ª–∏: ${error.details}\n`;
          }
          responseMessage += '\n';
        });

        await ctx.reply(responseMessage);
      } catch (error) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –æ—à–∏–±–æ–∫ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º –≤ –≥—Ä—É–ø–ø–µ');
      }
    });

    // –ö–æ–º–∞–Ω–¥–∞ /generate_pdf
    this.bot.command('generate_pdf', async (ctx) => {
      try {
        await this.shelfSenseService.generateLabelsPdf();
        await ctx.reply('‚úÖ PDF —Å —Ü–µ–Ω–Ω–∏–∫–∞–º–∏ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!');
      } catch (error) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF —Å —Ü–µ–Ω–Ω–∏–∫–∞–º–∏');
      }
    });

    // –ö–æ–º–∞–Ω–¥–∞ /help
    this.bot.command('help', async (ctx) => {
      const helpMessage = `
üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º ShelfSense Bot:

üè∑Ô∏è –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üìä –°–≤–æ–¥–∫–∏:
/merchgroups - –°–ø–∏—Å–æ–∫ –º–µ—Ä—á-–≥—Ä—É–ø–ø
/shelf_summary - –°–≤–æ–¥–∫–∞ –ø–æ –≤—ã–∫–ª–∞–¥–∫–µ —Ç–æ–≤–∞—Ä–∞
/price_summary - –°–≤–æ–¥–∫–∞ –ø–æ —Ü–µ–Ω–Ω–∏–∫–∞–º

üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
/voids - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é –ø—É—Å—Ç–æ—Ç
/voids_group [ID] - –ü—É—Å—Ç–æ—Ç—ã –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≥—Ä—É–ø–ø–µ
/price_errors - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é –æ—à–∏–±–æ–∫
/price_errors_type [–¢–ò–ü] - –û—à–∏–±–∫–∏ –ø–æ —Ç–∏–ø—É
/price_errors_group [ID] - –û—à–∏–±–∫–∏ –≤ –≥—Ä—É–ø–ø–µ

üñ®Ô∏è –î–µ–π—Å—Ç–≤–∏—è:
/generate_pdf - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å PDF —Å —Ü–µ–Ω–Ω–∏–∫–∞–º–∏

üí° –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –≥—Ä—É–ø–ø –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /merchgroups
      `;
      
      await ctx.reply(helpMessage);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    this.bot.on('text', async (ctx) => {
      const text = ctx.message?.text;
      if (!text) return;

      // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–º–æ—â—å
      if (!text.startsWith('/')) {
        await ctx.reply(
          'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º. –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.'
        );
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    this.bot.catch((err, ctx) => {
      console.error(`–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ:`, err);
      ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    });
  }
}
